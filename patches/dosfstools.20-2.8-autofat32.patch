diff -u --recursive mkdosfs/mkdosfs.c mkdosfs/mkdosfs.c
--- mkdosfs/mkdosfs.c	Tue Feb 25 15:25:08 2003
+++ mkdosfs/mkdosfs.c	Wed Feb 26 15:51:56 2003
@@ -770,13 +772,33 @@
       bs.media = (char) 0xf8; /* Set up the media descriptor for a hard drive */
       bs.dir_entries[0] = (char) 0;	/* Default to 512 entries */
       bs.dir_entries[1] = (char) 2;
-      /* For FAT32, use 4k clusters on sufficiently large file systems,
-       * otherwise 1 sector per cluster. This is also what M$'s format
-       * command does for FAT32. */
-      bs.cluster_size = (char)
-	    (size_fat == 32 ?
-	     ((long long)blocks*SECTORS_PER_BLOCK >= 512*1024 ? 8 : 1) :
-	     4); /* FAT12 and FAT16: start at 4 sectors per cluster */
+      /* Check if we should use FAT32 */
+      if (!size_fat) {
+	if ((blocks*SECTORS_PER_BLOCK) > 1064960) {
+	  if (verbose) printf("Selecting FAT32 on large drive\n");
+	  size_fat = 32;
+	}
+      }
+      if (size_fat == 32) {
+	/* Use this table to find FAT32 default cluster size */
+	int volsize = blocks*SECTORS_PER_BLOCK;
+	if (volsize <= 66600)
+	  die("Volume too small for FAT32\n");
+	else if (volsize <= 532480)
+	  bs.cluster_size = 1;
+	else if (volsize <= 16777216)
+	  bs.cluster_size = 8;
+	else if (volsize <= 33554432)
+	  bs.cluster_size = 16;
+	else if (volsize <= 67108864)
+	  bs.cluster_size = 32;
+	else
+	  bs.cluster_size = 64;
+	if (verbose) printf("Selecting %i sectors per cluster\n",bs.cluster_size);
+      } else { 
+	/* FAT12 and FAT16: start at 4 sectors per cluster */
+	bs.cluster_size = 4;
+      }
     }
 }
 
