diff -urN linux-clean/arch/ia64/kernel/entry.S fixes/arch/ia64/kernel/entry.S
--- linux-clean/arch/ia64/kernel/entry.S	Wed Sep  5 09:58:32 2001
+++ fixes/arch/ia64/kernel/entry.S	Wed Sep  5 10:13:03 2001
@@ -153,10 +153,11 @@
 (p6)	cmp.eq p7,p6=r26,r27
 (p6)	br.cond.dpnt.few .map
 	;;
-.done:	ld8 sp=[r21]			// load kernel stack pointer of new task
+.done:
 (p6)	ssm psr.ic			// if we we had to map, renable the psr.ic bit FIRST!!!
 	;;
 (p6)	srlz.d
+	ld8 sp=[r21]			// load kernel stack pointer of new task
 	mov IA64_KR(CURRENT)=r20	// update "current" application register
 	mov r8=r13			// return pointer to previously running task
 	mov r13=in0			// set "current" pointer
diff -urN linux-clean/arch/ia64/kernel/signal.c fixes/arch/ia64/kernel/signal.c
--- linux-clean/arch/ia64/kernel/signal.c	Tue Jul 31 11:30:08 2001
+++ fixes/arch/ia64/kernel/signal.c	Wed Sep  5 10:13:03 2001
@@ -139,10 +139,9 @@
 		struct ia64_psr *psr = ia64_psr(&scr->pt);
 
 		__copy_from_user(current->thread.fph, &sc->sc_fr[32], 96*16);
-		if (!psr->dfh) {
-			psr->mfh = 0;
+		psr->mfh = 0;   /* drop signal handler's fph contents... */
+		if (!psr->dfh)
 			__ia64_load_fpu(current->thread.fph);
-		}
 	}
 	return err;
 }
