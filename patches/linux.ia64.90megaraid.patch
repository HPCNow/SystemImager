diff -urN linux.orig/drivers/scsi/megaraid.c linux/drivers/scsi/megaraid.c
--- linux.orig/drivers/scsi/megaraid.c	Sat Nov  9 23:18:01 2002
+++ linux/drivers/scsi/megaraid.c	Sat Nov  9 23:26:54 2002
@@ -540,11 +540,13 @@
 
 static ulong RDINDOOR (mega_host_config * megaCfg)
 {
+	rmb();
 	return readl (megaCfg->base + 0x20);
 }
 
 static void WRINDOOR (mega_host_config * megaCfg, ulong value)
 {
+	wmb();
 	writel (value, megaCfg->base + 0x20);
 }
 
@@ -555,6 +557,7 @@
 
 static void WROUTDOOR (mega_host_config * megaCfg, ulong value)
 {
+	wmb();
 	writel (value, megaCfg->base + 0x2C);
 }
 
@@ -627,6 +630,7 @@
 #define DECLARE_WAIT_QUEUE_HEAD(x)	struct wait_queue *x = NULL
 #endif
 
+#define pci_set_dma_mask(pdev, mask)
 
 #else
 
@@ -658,6 +662,7 @@
 #define init_MUTEX(x)           (*(x)=MUTEX)
 
 #define pci_enable_device(x) (0)
+#define pci_set_dma_mask(pdev, mask)
 
 /*
  *	2.0 lacks spinlocks, iounmap/ioremap
@@ -2345,10 +2350,10 @@
 			mbox->numstatus = 0xFF;
 			mbox->status = 0xFF;
 			WRINDOOR (megaCfg, phys_mbox | 0x1);
-
-			while (mbox->numstatus == 0xFF) ;
-			while (mbox->status == 0xFF) ;
-			while (mbox->mraid_poll != 0x77) ;
+			(void) RDINDOOR (megaCfg);	/* flush posted write */
+			while (mbox->numstatus == 0xFF)  cpu_relax();
+			while (mbox->status == 0xFF)     cpu_relax();
+			while (mbox->mraid_poll != 0x77) cpu_relax();
 			mbox->mraid_poll = 0;
 			mbox->mraid_ack = 0x77;
 
@@ -2550,21 +2555,10 @@
 	megaCfg->mbox = &megaCfg->mailbox64.mailbox;
 #endif
 
-#ifdef __LP64__
-	megaCfg->mbox = (mega_mailbox *) ((((u64) megaCfg->mbox) + 16) & ((u64) (-1) ^ 0x0F));
-	megaCfg->adjdmahandle64 = (megaCfg->dma_handle64 + 16) & ((u64) (-1) ^ 0x0F);
-	megaCfg->mbox64 = (mega_mailbox64 *) ((u_char *) megaCfg->mbox - sizeof (u64));
-	paddr = (paddr + 4 + 16) & ((u64) (-1) ^ 0x0F);
-#else
-	megaCfg->mbox
-	    = (mega_mailbox *) ((((u32) megaCfg->mbox) + 16) & 0xFFFFFFF0);
-
+	megaCfg->mbox = (mega_mailbox *) ((((unsigned long) megaCfg->mbox) + 16) & ~0xFUL);
 #if LINUX_VERSION_CODE >= KERNEL_VERSION(2,4,0)
-	megaCfg->adjdmahandle64 = ((megaCfg->dma_handle64 + 16) & 0xFFFFFFF0);
-#endif
-
-	megaCfg->mbox64 = (mega_mailbox64 *) ((u_char *) megaCfg->mbox - 8);
-	paddr = (paddr + 4 + 16) & 0xFFFFFFF0;
+	megaCfg->adjdmahandle64 = (megaCfg->dma_handle64 + 16) & ~0xFUL;
+	paddr = (paddr + 4 + 16) & ~0xFUL;
 #endif
 
 	/* Register mailbox area with the firmware */
@@ -3141,14 +3135,9 @@
 		numFound++;
 
 		/* Set the Mode of addressing to 64 bit */
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2,4,0)
-		if ((megaCfg->flag & BOARD_64BIT) && BITS_PER_LONG == 64)
-#ifdef __LP64__
-			pdev->dma_mask = 0xffffffffffffffff;
-#else
-			pdev->dma_mask = 0xffffffff;
-#endif
-#endif
+		if (megaCfg->flag & BOARD_64BIT)
+			pci_set_dma_mask (pdev, ~0UL);
+
 		continue;
 	      err_release:
 		if (flag & BOARD_QUARTZ)
@@ -3266,7 +3255,7 @@
 	mbox = (mega_mailbox *) mboxData;
 
 	/* Flush cache to disk */
-	memset (mbox, 0, 16);
+	memset (mbox, 0, sizeof (mbox));
 	mboxData[0] = 0xA;
 
 	free_irq (megaCfg->host->irq, megaCfg);	/* Must be freed first, otherwise
