#!/bin/sh
#
# Description: report the rebooted status to the monitor server.
#

# netcat timeout in seconds
TIMEOUT=30

send_monitor_msg() {
    if [ -z $MONITOR_SERVER ]; then
        return
    fi
    if [ -z $MONITOR_PORT ]; then
        MONITOR_PORT=8181
    fi

    # Remove special field separator from the message.
    msg=`echo "$@" | sed 's/:/\\\x3a/g'`

    # Get the client mac address.
    if [ -z "$mac" ]; then
        mac=`ifconfig $DEVICE 2>/dev/null | sed -ne "s/.*HWaddr //p" | sed "s/ //g" | sed s/:/./g`
    fi

    # Report the message to the monitor server.
    send_msg=`echo "mac=$mac:ip=$IPADDR:host=$HOSTNAME:$msg"`

    # Find netcat binary
    netcat=`(which netcat || which nc) 2>/dev/null`
    [ -z $netcat ] && return

    rebooted_state_file=/etc/systemimager/si_monitor.client.rebooted
    rm -f $rebooted_state_file

    cmd="[ ! -f $rebooted_state_file ] && touch $rebooted_state_file && (echo \"$send_msg\" | $netcat -w $TIMEOUT $MONITOR_SERVER $MONITOR_PORT)"

    if [ -f /etc/SuSE-release ]; then
        # SuSE
        echo $cmd >> /etc/init.d/after.local
    elif [ -f /etc/redhat-release ]; then
        # RedHat / Fedora
        echo $cmd >> /etc/rc.local
    elif [ -f /etc/debian_version ]; then
        # Debian
        init_d_file=/etc/init.d/systemimager-monitor-firstboot
	cat << EOF > $init_d_file
#!/bin/sh

set -e

case "\$1" in
  start)
        $cmd
        ;;
  stop|reload|restart|force-reload)
        ;;
  *)
        exit 1
        ;;
esac
exit 0
EOF
        ln -s $init_d_file /etc/rcS.d/S99systemimager-monitor-firstboot
    else
        # Unknown distribution... try with rc.local.
        echo $cmd >> /etc/rc.local
    fi
}

# Load installation variables.
[ -e /tmp/post-install/variables.txt ] && . /tmp/post-install/variables.txt

# Write commands to send status and final message to the monitord.
send_monitor_msg "status=102"

