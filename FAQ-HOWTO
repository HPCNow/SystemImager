#
# "SystemImager" - Copyright (C) 1999-2000 TheFinleys.com <brian@thefinleys.com> 
#
# This file is: /systemimager/documents/FAQ-HOWTO
#
# Current version as of the writing of this document: 0.24
#
# This document written by:  
#  Ari Jort <ajort@valinux.com>
#  Brian Finley <brian@thefinleys.com>
#


                               SystemImager
                        Frequently Asked Questions
                                and HOWTO

This document contains the answers to some Frequently Asked Questions about 
SystemImager.  If you don't find what you're looking for here, try the 
mailing list <systemimager@systemimager.com> or you can email me directly 
<brian@thefinleys.com>.  This software comes with no guarantee of any kind,
including no guarantee that I will be able to answer your email in a timely 
manner. ;)  There is a good chance your answer will come faster from the list.



--------------------------------------------------------------------------------
-  What is SystemImager?
--------------------------------------------------------------------------------

  SystemImager is a package that makes the installation of Linux to
  masses of similar machines relatively easy.  It also makes software,
  configuration, or operating system updates easy.  You can even update
  from one distribution to another!  It is most useful in environments
  where you have large numbers of identical machines.  Some typical
  environments include: Linux clusters, internet server farms, computer
  labs, or corporate desktop environments where all workstations have
  the same basic hardware configuration.

  SystemImager is designed to be distribution independent.  Currently
  it is only tested with RedHat based systems such as RedHat and 
  VALinux.  If you have difficulty using it with your particular 
  distribution, please mail me so that I can make appropriate changes.  
  Or better yet, make them yourself and mail me the changes! :)


--------------------------------------------------------------------------------
-  What kind of organizations use SystemImager?
--------------------------------------------------------------------------------

  Typical organizations that see benefit from using SystemImager:
  - are doing super-computing/clustering with Linux
  - have Internet server farms
  - manage many workstations for a department or an entire company
  - anyone who needs to maintain identical configurations on a a large number
    of machines


--------------------------------------------------------------------------------
-  What are the requirements for running SystemImager?
--------------------------------------------------------------------------------

  To set up a SystemImager server installation, you will require two services:  

  - You will need to have rsync installed on your "imageserver" and on your 
    "master" client.

  - You will need to run a DHCP server on your network.  The "install" command, 
    run on your chosen "imageserver", will give you the opportunity to have it
    ask you the questions necessary to properly configure it as a DHCP server.

  - All of the clients for a particular image should have an identical hardware
    configuration.  They should at least have the same hard drive(s) and the
    same ethernet card(s).

  - If you are using SystemImager v0.19 or later, there are no specific kernel
    requirements.

    If you are using a pre v0.19 version of SystemImager, you should upgrade.  
    If you must use a pre v0.19 version for some reason, then here are the 
    requirements:

    SystemImager pre v0.19 requires that the "imageserver" kernel support ram 
    disks.  In order to create floppy disks, you will also need support for the 
    minix filesystem.  If have built these as kernel modules, you will find
    the ramdisk module at:

	/lib/modules/`uname -r`/block/rd.o

    and the minix filesystem driver at 

	/lib/modules/`uname -r`/fs/minix.o

    where `uname -r` represents the version of the linux kernel you
    are currently running.  So for in my current system, I see the 
    following:

    [arijort@imageserver /systemimager]$ uname -r
    2.2.11


--------------------------------------------------------------------------------
-  How does it work?
--------------------------------------------------------------------------------

  The basic idea behind SystemImager is to suck the entire system image from
  a "master" client to an "imageserver" (the imageserver is the machine where 
  you install this software).  This image can then be replicated to any number 
  of client systems you want configured in the same way.

  Once your client systems have had the initial image replicated to them,
  they can be updated/upgraded by syncing them to an updated image on the
  image server.  During an update, only changes to modified files are pulled
  to the client.  This makes for a very fast, very efficient, very accurate
  mass update.

  
--------------------------------------------------------------------------------
-  How do I set up SystemImager?
--------------------------------------------------------------------------------

  The initial setup of SystemImager is a three step process:

  1) Install SystemImager on the machine you designate as your "imageserver".
     - download and untar the SystemImager tarball
     - cd into the unpacked directory (ie. cd SystemImager-v0.20)
     - run the "install" command (ie. ./install)

  2) Then you will select a machine that we call the "master" client.  This 
     will be the machine whose image you are replicating across numerous other 
     machines.  
     - Configure this "master" client as you normally would any machine.  
       Don't worry too much about getting it exactly right the first time, 
       since you can use SystemImager to make incremental changes to your image
       rather easily.
     - Run the "prepareclient" command on your "master" client.  You will find 
       this command under the "installstuff" directory on your "imageserver" 
       after you have performed step 1 above.  Copy this command to the "master"
       client via the network or a floppy.  Here's my recommended method:

       Assuming your imageserver's IP address is 192.168.1.1, you would go to
       the master client and copy over the prepareclient command by typing:
       [you@client]$ rsync -av 192.168.1.1::installstuff/prepareclient /tmp

       Now you can run the command by typing:
       [you@client]$ /tmp/prepareclient 192.168.1.1

  3)   You are then ready to pull the image from the "master" client onto
       the "imageserver" with the command "/systemimager/bin/getimage".
       Run this command as follows:

       [arijort@imageserver /systemimager/bin]$ \
       > ./getimage <client_hostname> <image_name>

       where <client_hostname> is the hostname or IP address of the "master"
       client and <image_name> is the name that you want to give to this image.

       Example:
       [arijort@imageserver /systemimager/bin]$ \
       > ./getimage computenode1 valinux6.0.4

       Answer all the questions that the "getimage" command asks you, and you
       should be ready to autoinstall your first client by simply booting it
       off the "autoinstalldiskette".


--------------------------------------------------------------------------------
-  How do I exclude files or directories during a getimage?
--------------------------------------------------------------------------------

  Currently there is not support for this.  Look for this feature soon.


--------------------------------------------------------------------------------
-  Do I have to do anything to prepare a client from which I will get an image? 
--------------------------------------------------------------------------------

  Yes.  Copy the prepareclient command to a diskette or across the network, and
  run it on the client.  You will also want to add any software, configure any
  files, and do any tweaking to make the system just how you like it!


--------------------------------------------------------------------------------
-  Can I use the autoinstalldiskette on more than one machine?
--------------------------------------------------------------------------------

  Yes.  It is generic, and can be on any machine that you want to autoinstall.

  Note:  The version of the autoinstalldiskette must be appropriate for the
  version of SystemImager you are using.  See the VERSION file to find out
  the appropriate version to use.


--------------------------------------------------------------------------------
-  How does an autoinstall client know which image to install?
--------------------------------------------------------------------------------

  When the autoinstall client boots off the autoinstalldiskette (or the network
  -- soon) it requests an IP address via dhcp.  It also determines the address
  of the imageserver from dhcp.  It then contacts the imageserver and requests
  a hosts file (/systemimager/etc/hosts).   s IP address in this file.

  In order to better understand the answer, let me lead up to it with the steps
  the autoinstall client goes through:

  1) Boots off the autoinstalldiskette or the network (coming soon ;).
  2) Gets an IP address from dhcp
  3) Determines the IP address of the imageserver via dhcp
     (the last nameserver entry)
  4) Requests a hosts file from the imageserver
  5) Finds it's hostname in the hosts file based on it's IP address
  6) Requests a script from the imageserver based on it's hostname
     ( for example: installstuff/web-host239.sh )
  7) Executes this script

  The script in question is typically a soft link pointing at the
  $imagename.master script that was dynamically created when you ran getimage.
  This script explicitly states which image to pull from the imageserver.  Open 
  it up and take a look!

--------------------------------------------------------------------------------
-  How do I upgrade to a new version?
--------------------------------------------------------------------------------

  SystemImager is still changing dynamically, so you can't simply install a new
  version on top of an old one.  Depending on the version changes, this may work
  for you, but it is not guaranteed.  If you want to try this method, please
  check with the CHANGE.LOG document to find out what has changed.

  Currently the recommended method is to move your images directory out of the 
  systemimager directory hierarchy, back up your /etc/rsyncd.conf file and any
  other configuration files you may have changed.  Then install SystemImager
  as if you were installing it for the first time, after which you can move your 
  images directory and /etc/rsyncd.conf file back.

  There will be a safe and automated upgrade process in the future.

  Note:  Be sure to check the VERSION document to see if the autoinstall 
  diskette has changed versions.  You must use the apropriate autoinstall 
  diskette version for things to work properly.


--------------------------------------------------------------------------------
-  When making the autoinstalldiskette, my system gives me an error involving 
   "dd" or "mount".
--------------------------------------------------------------------------------

  You are using a pre v0.19 version of SystemImager.  Please download the latest
  version from http::/systemimager.org/.

  If you must use a pre v0.19 version for some reason, be sure that your kernel 
  has "ramdisk" support.  Or that you have ramdisk support with a module.  If 
  you are using a module, be sure that it is loaded with the "modprobe" command.

  But it's probably easier to just get the latest version...


--------------------------------------------------------------------------------
-  My autoinstall client booted up and said "dhcp didn't work", but when I do 
   an ifconfig eth0 it has an IP address.  What happened?
--------------------------------------------------------------------------------

  Are you connected to a switch?  Most switches will wait a period of time
  (usually 30 seconds) after a connected system's interface has come up before 
  transmitting on that port.  Newer versions of the autoinstalldiskette bring
  the ethernet interface up and wait 45 seconds or so before making a dhcp
  request.  It will then wait 35 seconds or so to give the system time to 
  receive an address.  You could be using an autoinstalldiskette that does not
  wait the proper time for your switch and is giving up before it should.

  Be sure that you are using the latest version of SystemImager and that you
  are using the autoinstalldiskette image that comes with that version.  Note 
  that the version numbers may not match.  See the VERSION file.


--------------------------------------------------------------------------------
-  My client failed to autoinstall, and when I run an rsync command on it 
   manually it takes forever for the imageserver to respond.
--------------------------------------------------------------------------------

  Be sure that the imageserver can look up the client's hostname based on it's
  IP address.  The easiest way to do this is to have entry in the imageserver's 
  /etc/hosts file for the client system.


--------------------------------------------------------------------------------
-  But I want to assign static IPs to my clients!
--------------------------------------------------------------------------------

  You can!  After you have run getimage, you will have a script called
  $imagename.master ($imagename is what you called the image).  Edit this 
  script, and find the section that says:
  "### uncomment this block to use static IP addresses ###"
  and uncomment that block.

  Note:  the $imagename.master script will be re-created everytime you run
  getimage.  If you customize it, be sure to back it up.


--------------------------------------------------------------------------------
-  I want to use DHCP to assign static IPs to my clients, but I don't want
   to have to manually enter my 1024 mac addresses.  What can I do?
--------------------------------------------------------------------------------

  SystemImager comes with the "makedhcpstatic" utility.  As you boot your 
  client systems, the DHCP server will assign addresses sequentially.  By
  initially booting your systems in the order you want them to receive their
  IP addresses, you can ensure that they get the IP address you want them to
  have.  

  After booting your systems, run makedhcpstatic.  It will re-write your 
  /etc/dhcpd.conf file associating each clients MAC address with it's host
  name.  You should then restart your dhcpd daemon.  Subsequently, each time
  your clients request an IP address via DHCP, the will always be assigned 
  their appropriate static IP address.

  Note:  The client's hostname is used, instead of an explicit IP address, so
  that you simply have to change the hosts file on the DHCP server (or DNS, 
  NIS, etc.) to change the IP address that that client recieves.
  
  Note:  Static IP addresses, assigned by DHCP, is the author's preferred 
  method for administering IP on a large number of systems, if static IP 
  addresses are actually required.


--------------------------------------------------------------------------------
-  What kind of performance can I expect?
--------------------------------------------------------------------------------

  Here are some unofficial numbers that I came up with.  Your experience may
  be quite different based on the speed of your network, the performance of
  your imageserver and clients, and the size of the image.

  If you can send me statistics from your experience, I'll add them below.

  Size of Image   Clients   Network Type   Switched   Elapsed Time
  -------------   -------   ------------   --------   ------------
   2.5 Gig         21        100BaseTx      yes        1.5 Hours
   1.5 Gig         20        100BaseTx      yes        .5 Hours


--------------------------------------------------------------------------------
-  How do I update an image on the imageserver?
--------------------------------------------------------------------------------

  There are two ways to update an image on the imageserver:
  1) Make the changes to one of your clients and run "getimage" again.  

     - You can specify the same image name, in which case the current image
       will be updated (only changes are pulled across).

     - Or you can specify a new image name and have a form of revision control.
       (This is by far the recommended method)

     Note:  Everytime getimage is run, it will recreate the $image.master 
     script.  If you have customized your $image.master script, be sure to 
     save it before running getimage again.

  2) Modify the files directly.  You can simply cd into the appropriate image
     directory and edit the files there, or (recommended) you can cd into the
     image directory and run "chroot . sh".  This will change your working root
     directory to the root of the image you want to manipulate.  You can then 
     run RPM command, etc. on the image and not have to worry about getting 
     confused and hosing the imageserver.  When you are done, simply type 
     "exit" and you will be returned to your normal shell.


--------------------------------------------------------------------------------
-  How do I update a client to match an image?
--------------------------------------------------------------------------------

  Once you have updated an image on the imageserver, you can then update your
  clients to reflect this new or modified image.  (It is not necessary to do a
  complete re-autoinstall.)  You will find the command "updateimage" on your 
  clients.  This command takes as it's parameters, the name of the imageserver
  and the name of the image that you want to update the client to.  Run
  "updateimage --help" to get more information about this command.

  If you use the revision control method recommended in "How do I update an
  image on the imageserver?" then you will be able to bring your production
  environment back to a known state (by doing an updateimage to the last 
  working image) after having done an updateimage to a not quite so 
  thoroughly tested image.

  Note:  The file /etc/systemimager.exclude on your clients is used to exclude
  files and directories from being updated by the updateimage command.  Please
  take a look at this file and modify it to suit your local environment.


--------------------------------------------------------------------------------
-  What is systemimager.exclude used for?
--------------------------------------------------------------------------------

  It is used by the "updateimage" command.  See the section:
  "How do I update a client to match an image?"


--------------------------------------------------------------------------------
-  We are in the process of building a new "front-end" server for our
  roadrunner Linux cluster.  We'd like to try using SystemImager as our
  node cloning software if possible.
 
  I've read through the SystemImager FAQ and found the following:
 
    - All of the clients for a particular image should have an identical
      hardware configuration.  They should at least have the same hard
      drive(s) and the same ethernet card(s).
 
  This is a problem since our front-end which the image will be captured
  from has a SCSI hard drive and a Gigabit ethernet card.  Our 64
  compute nodes on the other hand have IDE disk drives and fast ethernet
  cards.  Are we out of luck?
--------------------------------------------------------------------------------

Nope.  Just a little customization ahead of you...

1) Once you have done your "getimage" you will need to edit the
   conf.modules in the image on the imageserver to load the appropriate
   module for your ethernet card.

   "vi /systemimager/images/$imagename/etc/conf.modules"

   I believe your entry will look like this:

   "alias eth0 tulip"

2) You will need to edit the fstab file in the image:

   "vi /systemimager/images/$imagename/etc/fstab"

   Be sure it says /dev/hdaX instead of /dev/sdaX, etc.

3) You will need to specify the partition information in the
   $imagename.master script that was created when you did your
   getimage.

   "vi /systemimager/installstuff/$imagename.master"

   You will find a section that looks like this:

   # Here's an example of how to customize a disk:
   # start at the beginning 0, give 20M /dev/sda1 for /boot, assume partition type 83
   # start where left off, 512M /dev/sda2 for swap, partition type 82
   # start where left off, give the rest of the disk to /dev/sda3 for /, assume partition type 83
   #sfdisk -uM /dev/sda <<EOF
   #0,20
   #,512,82
   #,
   #;
   #EOF

   Uncomment the lines from sfdisk down to EOF (EOF must be flush left)
   and change the values to specify your partitions according to the
   example.

   If you don't want to have to think so much, then you can simply do
   the following command on a destination client that is already
   partitioned correctly:

   "/tmp/sfdisk -d /dev/hda" (Assuming you only have one disk and that disk is /dev/hda.)

   Then copy the output into the $install.master script and delete the
   existing entries for the SCSI disk.

   Be sure to back up this script to another name (i.e.
   $imagename.master.custom) as it will get re-created the next time you
   do a "getimage" with the same imagename.

4) Search the $imagename.master script for all entries of your old drive
   "/dev/sda" and be sure that they are changed to the appropriate drive
   "/dev/hda".  This will be for the "mke2fs" and "mkswap" sections.

5) Proceed as normal.
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------
-  How do I edit the scripts so only the FIRST disk is sfdisk'ed? I MUST
   leave the other disks alone.
--------------------------------------------------------------------------------

First, be sure you are using the latest version of SystemImager.

Then, after you run "prepareclient", look in the /etc/partitionschemes
directory on that client.  You will find a file that has the partition
information for each of that clients disks.  Simply delete all except
for the primary disk.

Now you can do your "getimage" and everything else like normal.

The only other thing to verify is that the fstab file in the image has
no entries for the other disks:
"vi /systemimager/images/$imagename/etc/fstab"
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------
-  How can I use SystemImager to update a small set of files? For instance,
   I apply a security patch and I want all boxes to reflect that change.
--------------------------------------------------------------------------------
This is accomplished with the "updateimage" command on the client.

1) Choose one of the following methods to update the image on the server:
   A - apply the patch to the image directly
   B - apply the patch to a client and then do another getimage
       specifying the same imagename (won't take long and will
       update the image).
   C - apply the patch to a client and then do another getimage
       specifying a _different_ imagename.  This is preferred as it
       allows for revision control.

2) run "updateimage" on the clients that you want to update.  Do an
   "updateimage --help" to get the syntax.
--------------------------------------------------------------------------------


--------------------------------------------------------------------------------
-  What other software is this based on?
--------------------------------------------------------------------------------

  SystemImager is based on rsync(1) and also makes use of tomsrtbt(2).


--------------------------------------------------------------------------------
-  References
--------------------------------------------------------------------------------

(1)  rsync -- remote sync/update protocol.  rsync was written by 
              Andrew Tridgell <tridge@samba.org> and Paul Mackerras 
              <Paul.Mackerras@cs.anu.edu.au>.  See 
              http://rsync.samba.org/ for more information.

(2)  tomsrtbt -- Tom's Root/Boot "The most Linux on one floppy disk"
                 <tom@toms.net>.  See http://www.toms.net/rb/ for 
                 more information.


--------------------------------------------------------------------------------
-  Questions yet to be answered -- please send more!
--------------------------------------------------------------------------------

-  My client failed to autoinstall, and when I run an rsync command on it 
   manually it takes forever for the imageserver to respond.
-  Some of my clients have disks from different manufacturers or with different
   geometries.  Will an autoinstall work on them?
-  How do I know when an autoinstall client is finished autoinstalling?
