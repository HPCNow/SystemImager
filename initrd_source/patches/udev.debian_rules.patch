--- udev-108.orig/debian/rules	2007-04-29 12:21:15.000000000 +0200
+++ udev-108/debian/rules	2007-04-29 12:22:02.000000000 +0200
@@ -18,15 +18,13 @@
 # Extra tools that come with udev that we want to build
 EXTRAS = extras/ata_id extras/cdrom_id extras/edd_id \
 	 extras/path_id extras/scsi_id extras/usb_id extras/volume_id \
-	 extras/dvb_device_name extras/usb_device_name extras/ide_media \
-	 extras/vio_type extras/pnp_modules extras/firmware extras/floppy \
-	 extras/iftab extras/watershed
+	 extras/usb_device_name extras/ide_media extras/iftab
 
 
 # Apply patches to the package
 patch: patch-stamp
 patch-stamp:
-	dh_testdir
+	#dh_testdir
 	@patches=debian/patches/*.patch; for patch in $$patches; do \
 		test -f $$patch || continue; \
 		echo "Applying $$patch"; \
@@ -36,7 +34,7 @@
 
 # Remove patches from the package
 unpatch:
-	dh_testdir
+	#dh_testdir
 	@if test -f patch-stamp; then \
 		patches=debian/patches/*.patch; \
 		for patch in $$patches; do \
@@ -54,12 +52,12 @@
 # Build the package
 build: patch-stamp build-stamp
 build-stamp:
-	dh_testdir
+	#dh_testdir
 
 	test -d udeb || mkdir udeb
 	find -print0 | cpio -pdm0l udeb
 
-	$(MAKE) V=true USE_SELINUX=true EXTRAS="$(EXTRAS)" \
+	$(MAKE) V=true USE_SELINUX=false EXTRAS="$(EXTRAS)" \
 		OPTFLAGS="$(OPTFLAGS)"
 
 	$(MAKE) -C udeb V=true USE_SELINUX=false EXTRAS="$(EXTRAS)" \
@@ -70,11 +68,12 @@
 # Install files into the deb
 install-deb: DH_OPTIONS=-pudev -plibvolume-id0 -plibvolume-id-dev -pvolumeid
 install-deb: build
-	dh_testdir
-	dh_testroot
-	dh_clean -k 
-	dh_installdirs
-	dh_install
+	#dh_testdir
+	#dh_testroot
+	#dh_clean -k 
+	#dh_installdirs
+	#dh_install
+	mkdir -p debian/udev/lib/firmware debian/udev/lib/udev debian/udev/lib/udev/devices debian/udev/lib/udev/devices/net debian/udev/lib/udev/devices/pts debian/udev/lib/udev/devices/shm debian/udev/usr/share/initramfs-tools/hooks debian/udev/usr/share/initramfs-tools/scripts/init-premount debian/udev/usr/share/initramfs-tools/scripts/casper-premount debian/udev/usr/share/initramfs-tools/scripts/local-top debian/udev/usr/share/initramfs-tools/scripts/nfs-top debian/udev/usr/share/initramfs-tools/scripts/init-bottom debian/udev-udeb/sbin debian/udev-udeb/etc/udev debian/udev-udeb/etc/udev/rules.d debian/udev-udeb/lib/firmware debian/udev-udeb/lib/udev debian/udev-udeb/lib/debian-installer-startup.d debian/udev-udeb/usr/bin debian/udev-udeb/usr/sbin
 
 	$(MAKE) install V=true EXTRAS="$(EXTRAS)" DESTDIR=$(CURDIR)/debian/udev
 
@@ -123,10 +122,10 @@
 # Install files into the udeb
 install-udeb: DH_OPTIONS=-pudev-udeb
 install-udeb: install-deb
-	dh_testdir
-	dh_testroot
-	dh_clean -k
-	dh_installdirs
+	#dh_testdir
+	#dh_testroot
+	#dh_clean -k
+	#dh_installdirs
 
 	# Copy binaries that we want
 	cp -a udeb/udevd debian/udev-udeb/sbin
@@ -137,11 +136,7 @@
 
 	# Copy helpers that we want
 	cp -a udeb/extras/usb_device_name/usb_device_name debian/udev-udeb/lib/udev
-	cp -a udeb/extras/dvb_device_name/dvb_device_name debian/udev-udeb/lib/udev
-	cp -a udeb/extras/pnp_modules/pnp_modules debian/udev-udeb/lib/udev
 	cp -a udeb/extras/ide_media/ide_media debian/udev-udeb/lib/udev
-	cp -a udeb/extras/vio_type/vio_type debian/udev-udeb/lib/udev
-	cp -a udeb/extras/firmware/firmware_helper debian/udev-udeb/lib/udev
 	cp -a udeb/extras/ata_id/ata_id debian/udev-udeb/lib/udev
 	cp -a udeb/extras/edd_id/edd_id debian/udev-udeb/lib/udev
 	cp -a udeb/extras/usb_id/usb_id debian/udev-udeb/lib/udev
@@ -178,34 +173,34 @@
 # Build architecture-dependent files here.
 binary-arch: DH_OPTIONS=-a
 binary-arch: build install-deb install-udeb
-	dh_testdir
-	dh_testroot
-	dh_installchangelogs ChangeLog
-	dh_installdocs
-	dh_installexamples
-	dh_installinit --no-start -- start 10 S .
-	dh_link
-	dh_strip
-	dh_compress
-	dh_fixperms -X/lib/udev/devices/
-	dh_installdeb
-	dh_makeshlibs -V 'libvolume-id0 (>= 093-0ubuntu11)'
-	dh_shlibdeps -Llibvolume-id0 -ldebian/libvolume-id0/lib
-	dh_gencontrol
-	dh_md5sums
-	dh_builddeb
+	#dh_testdir
+	#dh_testroot
+	#dh_installchangelogs ChangeLog
+	#dh_installdocs
+	#dh_installexamples
+	#dh_installinit --no-start -- start 10 S .
+	#dh_link
+	#dh_strip
+	#dh_compress
+	#dh_fixperms -X/lib/udev/devices/
+	#dh_installdeb
+	#dh_makeshlibs -V 'libvolume-id0 (>= 093-0ubuntu11)'
+	#dh_shlibdeps -Llibvolume-id0 -ldebian/libvolume-id0/lib
+	#dh_gencontrol
+	#dh_md5sums
+	#dh_builddeb
 
 
 # Clean up the mess we made
 clean: clean-source unpatch
 clean-source:
-	dh_testdir
+	#dh_testdir
 	rm -f build-stamp
 
 	rm -rf udeb
 	-$(MAKE) clean V=true EXTRAS="$(EXTRAS)"
 
-	dh_clean 
+	#dh_clean 
 
 
 .PHONY: patch unpatch build install-deb install-udeb \
