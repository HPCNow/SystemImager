# This patch provided by:  Brian Stafford <brian.stafford@office-logic.com>
# 
# Details: 
#
#   Theis patch removes the NIS functionality from devfsd, allowing it to be 
#   built against uClibc.
#   
#   Having applied the patch, build with ``make -DWITHOUT_NLS=1''
#   

diff -b -r -u devfsd-orig/GNUmakefile devfsd/GNUmakefile
--- devfsd-orig/GNUmakefile	Tue Feb 19 06:06:43 2002
+++ devfsd/GNUmakefile	Wed Apr 10 16:35:38 2002
@@ -8,10 +8,14 @@
 KERNEL_DIR  = /usr/src/linux
 endif
 
+ifdef WITHOUT_NSL
+DEFINES     += -DWITHOUT_NSL=1
+else
 nsl_libs := $(wildcard /lib/libnsl.so.*)
 ifneq ($(nsl_libs),)
 LIBNSL      = $(shell for file in /lib/libnsl.so.[0-9]* ; do echo $$file ; done | sort -t . -n -k 2 | head -1)
 DEFINES     += -DLIBNSL="\"$(LIBNSL)\""
+endif
 endif
 
 
Only in devfsd: devfsd
diff -b -r -u devfsd-orig/devfsd.c devfsd/devfsd.c
--- devfsd-orig/devfsd.c	Mon Mar 25 06:59:40 2002
+++ devfsd/devfsd.c	Wed Apr 10 16:33:54 2002
@@ -283,8 +283,10 @@
 #include <regex.h>
 #include <errno.h>
 #include <dlfcn.h>
+#ifndef WITHOUT_NSL
 #include <rpcsvc/ypclnt.h>
 #include <rpcsvc/yp_prot.h>
+#endif
 #include <karma.h>
 #include "devfsd.h"
 #include "version.h"
@@ -414,9 +416,11 @@
 			      unsigned long *event_mask);
 static void process_config_line (CONST char *line, unsigned long *event_mask);
 static void *dlsym_nofail (const char *file, void *handle, char *symbol);
+#ifndef WITHOUT_NSL
 static int process_yp_line (int instatus, char *inkey, int inkeylen,
 			    char *inval, int invallen, char *indata);
 static void load_libnsl (void);
+#endif
 static flag do_servicing (int fd, unsigned long event_mask);
 static void service_name (const struct devfsd_notify_struct *info);
 static void action_permissions (const struct devfsd_notify_struct *info,
@@ -486,9 +490,11 @@
     {"fd/2", "stderr"},
     {NULL, NULL},
 };
+#ifndef WITHOUT_NSL
 static int (*my_yp_all) (char *domain, char *map,
 			 struct ypall_callback *callback); /* = NULL */
 static int (*my_yp_get_default_domain) (char **domainptr); /* = NULL */
+#endif
 static struct event_type
 {
     unsigned int type;        /*  The DEVFSD_NOTIFY_* value                  */
@@ -714,6 +720,7 @@
     [RETURNS] Nothing.
 */
 {
+#ifndef WITHOUT_NSL
     if (location[0] == '+')
     {
 	/*  It's a YP map  */
@@ -736,6 +743,7 @@
 	SYSLOG (LOG_ERR, "error reading map: \"%s\"\n", location + 1);
 	exit (1);
     }
+#endif
     read_config_file (location, optional, event_mask);
 }   /*  End Function read_config   */
 
@@ -1006,6 +1014,7 @@
     return (result);
 }   /*  End Function dlsym_nofail  */
 
+#ifndef WITHOUT_NSL
 static void load_libnsl (void)
 {
 #ifdef LIBNSL  /*  It comes from a shared object  */
@@ -1034,6 +1043,7 @@
     if (invallen > 0) process_config_line (inval, (unsigned long *) indata);
     return (0);
 }   /*  End Function process_yp_line  */
+#endif
 
 static flag do_servicing (int fd, unsigned long event_mask)
 /*  [SUMMARY] Service devfs changes until a signal is received.
