#!/bin/sh

#
# "VA SystemImager" - Copyright (C) 1999-2001 Brian Elliott Finley <brian@valinux.com>
#
#   Others who have contributed to this code (in alphabetical order):
#     Michael R. Nolta <mrnolta@princeton.edu>
#
# This file is: install
#  (this script does all the placing of files on the filesystem. "afterburner" is run
#   automatically by "install" unless the --no-afterburner option is used.
#   "afterburner" does all the configuration stuff.)
#


# do we want a quiet install? and do we want to run afterburner?
QUIET="false"
AFTERBURNER="yes"
for cl_option ; do
  case $cl_option in
    -q|-quiet|--quiet ) QUIET="true" ;;
    -n|-no-afterburner|--no-afterburner ) AFTERBURNER="no" ;;
  esac
done

# set some variables
PATH=/bin:/usr/bin:/sbin:/usr/sbin
PACKAGE_NAME=va-systemimager
COMMAND_PATH=`dirname $0`
test "x$COMMAND_PATH" != "x" && cd $COMMAND_PATH
INSTALL_DIR=`pwd`
VERSION=`cat $INSTALL_DIR/VERSION`
test "x$prefix" = "x" && prefix=/usr

# Set ownership properties for "install" based on whether we're doing a relocated install or not
[ "x$DESTDIR" = "x" ] && OWNERSHIP="-o root -g root" || OWNERSHIP=""

# don't restart inetd unless necessary
RESTART_INETD=no

# if not run as root, install will surely fail (unless it's an RPM build)
if [ "x$DESTDIR" = "x" -a `whoami` != "root" ];then
    echo "Must be run as root!"
    exit 1
fi

# create DESTDIR (DESTDIR is needed for the RPM creation process)
if [ ! "x$DESTDIR" = "x" ]; then
    install -d -m 755 $OWNERSHIP $DESTDIR
    if [ "$?" != "0" ];then
        echo "I can't create $DESTDIR"
	exit 1
    fi
fi

### BEGIN introduction ###
if [ $QUIET = "false" ]; then
  clear
  echo "Welcome to VA SystemImager."
  echo
  echo "This install script may modify the following files and/or directories:"
  echo
  echo " /tftpboot/systemimager/ -- create if necessary and add appropriate files/links"
  echo " /tftpboot/pxelinux.cfg/ -- create if necessary and add appropriate files/links"
  echo " /etc/services           -- add rsync and/or tftp entries if necessary"
  echo " /etc/inetd.conf         -- remove rsync entry if necessary and"
  echo "                            add or modify tftp entry if necessary"
  echo " /etc/rsyncd.conf        -- it is assumed that VA SystemImager will manage this"
  echo "                            file and that it will not be used for anything else"
  echo
  echo " All modified files will be backed up with the .beforesystemimager extension."
  echo

  # you sure you want to install?
  echo -n "Install VA SystemImager? (y/[n]) "
  read REPLY
  case $REPLY in
    y|Y|Yes|yes|YES ) clear; echo Ok.  Installing VA SystemImager... ;;
                  * ) echo Install cancelled.  No files modified. && exit 1 ;;
  esac

  echo
  sleep 2
fi
### END introduction ###

### BEGIN binaries ###
[ $QUIET = "false" ] && echo "Installing files in ${DESTDIR}${prefix}/sbin/"
[ ! -d "${DESTDIR}${prefix}/sbin" ] && install -d -m 755 $OWNERSHIP  ${DESTDIR}${prefix}/sbin/
install -m 555 $OWNERSHIP $INSTALL_DIR/sbin/makeautoinstallcd        ${DESTDIR}${prefix}/sbin/
install -m 555 $OWNERSHIP $INSTALL_DIR/sbin/addclients               ${DESTDIR}${prefix}/sbin/
install -m 555 $OWNERSHIP $INSTALL_DIR/sbin/getimage                 ${DESTDIR}${prefix}/sbin/
install -m 555 $OWNERSHIP $INSTALL_DIR/sbin/makeautoinstalldiskette  ${DESTDIR}${prefix}/sbin/
install -m 555 $OWNERSHIP $INSTALL_DIR/sbin/makedhcpstatic           ${DESTDIR}${prefix}/sbin/
install -m 555 $OWNERSHIP $INSTALL_DIR/sbin/makedhcpserver           ${DESTDIR}${prefix}/sbin/
### END binaries ###


### BEGIN init scripts ###
# find where init.d lives
[ -d /etc/rc.d/init.d ] && INITDIR_PREFIX="/etc/rc.d"
[ -d /etc/init.d ] && INITDIR_PREFIX="/etc"

# test to be sure that init.d was found
if [ "x$INITDIR_PREFIX" = "x" ];then
  [ $QUIET = "false" ] && echo "Couldn't set the INITDIR_PREFIX variable because I couldn't"
  [ $QUIET = "false" ] && echo "find either /etc/init.d/ or /etc/rc.d/init.d/."
  exit 1
fi

# do the install
[ ! -d "${DESTDIR}${INITDIR_PREFIX}/init.d" ] && install -d -m 755 $OWNERSHIP ${DESTDIR}${INITDIR_PREFIX}/init.d
[ $QUIET = "false" ] && echo "Installing files in ${DESTDIR}${INITDIR_PREFIX}/init.d/"
install -m 755 $OWNERSHIP --backup=numbered $INSTALL_DIR/etc/init.d/rsync ${DESTDIR}${INITDIR_PREFIX}/init.d
### END init scripts ###


### BEGIN tftpboot stuff ###
install -d -m 755 $OWNERSHIP ${DESTDIR}/tftpboot/systemimager
install -d -m 755 $OWNERSHIP ${DESTDIR}/tftpboot/pxelinux.cfg

[ $QUIET = "false" ] && echo "Installing files in ${DESTDIR}/tftpboot/"
install -m 555 $OWNERSHIP $INSTALL_DIR/tftpstuff/initrd.gz  ${DESTDIR}/tftpboot
install -m 555 $OWNERSHIP $INSTALL_DIR/tftpstuff/kernel     ${DESTDIR}/tftpboot

[ $QUIET = "false" ] && echo "Installing files in ${DESTDIR}/tftpboot/pxelinux.cfg/"
install -m 444 --backup=numbered $OWNERSHIP $INSTALL_DIR/tftpstuff/pxelinux.cfg/message.txt   ${DESTDIR}/tftpboot/pxelinux.cfg/message.txt
install -m 444 --backup=numbered $OWNERSHIP $INSTALL_DIR/tftpstuff/pxelinux.cfg/syslinux.cfg  ${DESTDIR}/tftpboot/pxelinux.cfg/syslinux.cfg
install -m 444 --backup=numbered $OWNERSHIP $INSTALL_DIR/tftpstuff/pxelinux.cfg/syslinux.cfg  ${DESTDIR}/tftpboot/pxelinux.cfg/default

[ $QUIET = "false" ] && echo "Installing files in ${DESTDIR}/tftpboot/systemimager/"
install -m 555 $OWNERSHIP --backup=numbered $INSTALL_DIR/tftpstuff/systemimager/systemimager.exclude  ${DESTDIR}/tftpboot/systemimager
install -m 555 $OWNERSHIP $INSTALL_DIR/tftpstuff/systemimager/raidstop              ${DESTDIR}/tftpboot/systemimager
install -m 555 $OWNERSHIP $INSTALL_DIR/tftpstuff/systemimager/mkreiserfs            ${DESTDIR}/tftpboot/systemimager
install -m 555 $OWNERSHIP $INSTALL_DIR/tftpstuff/systemimager/mkraid                ${DESTDIR}/tftpboot/systemimager
install -m 555 $OWNERSHIP $INSTALL_DIR/tftpstuff/systemimager/prepareclient         ${DESTDIR}/tftpboot/systemimager
install -m 555 $OWNERSHIP $INSTALL_DIR/tftpstuff/systemimager/raidstart             ${DESTDIR}/tftpboot/systemimager
install -m 555 $OWNERSHIP $INSTALL_DIR/tftpstuff/systemimager/updateclient          ${DESTDIR}/tftpboot/systemimager
### END tftpboot stuff ###


### BEGIN images stuff ###
[ $QUIET = "false" ] && echo "Installing files in ${DESTDIR}/var/spool/systemimager/images/"
install -d -m 750 $OWNERSHIP ${DESTDIR}/var/spool/systemimager/images
install -m 444 $OWNERSHIP $INSTALL_DIR/var/spool/systemimager/images/README  ${DESTDIR}/var/spool/systemimager/images/README
install -m 444 $OWNERSHIP $INSTALL_DIR/var/spool/systemimager/images/README  ${DESTDIR}/var/spool/systemimager/images/DO_NOT_TOUCH_THESE_DIRECTORIES
install -m 444 $OWNERSHIP $INSTALL_DIR/var/spool/systemimager/images/README  ${DESTDIR}/var/spool/systemimager/images/CUIDADO
install -m 444 $OWNERSHIP $INSTALL_DIR/var/spool/systemimager/images/README  ${DESTDIR}/var/spool/systemimager/images/ACHTUNG
### END images stuff ###


### BEGIN documentation and what not stuff ###
if [ "x$DESTDIR" = "x" ]
then
  if [ $QUIET = "true" ]
  then
    $INSTALL_DIR/installdocs -q || exit 1
  else
    $INSTALL_DIR/installdocs || exit 1
  fi
fi
### END documentation and what not stuff ###


# run afterburner unless told otherwise...
if [ "$AFTERBURNER" = "yes" ]
then
  if [ $QUIET = "true" ]
  then
    $INSTALL_DIR/afterburner --non-interactive --quiet || exit 1
  else
    $INSTALL_DIR/afterburner --non-interactive || exit 1
  fi
fi

exit 0
