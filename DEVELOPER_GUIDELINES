u#
#   "SystemImager"
#
#   Copyright (C) 1999-2005 Brian Elliott Finley
#
#   $Id$
#

--------------------------------------------------------------------------------
CODING
--------------------------------------------------------------------------------
o   For perl code, read "man perlstyle", it's not very long, but is very 
    insightful.  I just read it recently myself, but it turns out that it
    describes the style I prefer almost to a tee (I wonder where that 
    saying came from).  Except for this one bit:

        [Semicolon omitted in "short" one-line BLOCK.]
    
    You can ignore that bit.  -Brian

o   Try to mimick the style of the code that you are working in, unless
    it's perl and it conflicts with the perlstyle man page.  Not all of 
    the existing perl code was written accordingly.  This will 
    significantly improve your chances of it being accepted.

o   Include a usage statement with every function/subroutine, no matter how
    simple and self-explanatory that function is.  Example:

        #
        # Description:
        #   Chooses most appropriate from the available partition tools.
        #
        # Usage:
        #   my $partition_tool = which_partition_tool();
        #
        sub which_partition_tool {
            [... code here ...]
        }

o   When you close a bug or feature request, add an appropriate line to the 
    CHANGE.LOG that includes the bug or feature number and who you are.

o   Documentation:  Developers may make changes to the documentation source, but
    must contact Denise Walters for approval prior to making any structural 
    changes.  Denise may be contacted at: <denise.walters@hp.com>

o   Always give people credit in the CREDITS file.

o   Have fun!


--------------------------------------------------------------------------------
SVN
--------------------------------------------------------------------------------
o   The current development branch is always tagged "trunk".  It is
    intended for feature additions and funky stuff.  Unless you're just
    fixing a bug, or updating the stable documentation, this is what you
    want.

o   The stable branch is only to be used for fixing bugs.

o   Only Brian Finley, Dann Frazier, Sean Dague or Andrea Righi will
    modify SVN tags of any kind, such as for versioning releases or
    creating development branches.

o   Reference Material

    o   http://wiki.sisuite.org/
    o   http://gentoo-wiki.com/HOWTO_Subversion
    o   http://svnbook.red-bean.com/

o   Checkout Steps for Developers
    (You should be able to just copy and paste commands 2-5)

    MY_USERNAME=finley

    o  Development trunk:

	svn checkout svn+ssh://$MY_USERNAME@svn.sisuite.org/var/lib/svn/systemimager/trunk si.trunk/


    o  A particular revision of the development trunk:

	REVISION=3256
	svn checkout -r $REVISION svn+ssh://$MY_USERNAME@svn.sisuite.org/var/lib/svn/systemimager/trunk si.$REVISION/


    o  A particular branch:

	BRANCH=3.4.x
	svn checkout svn+ssh://$MY_USERNAME@svn.sisuite.org/var/lib/svn/systemimager/branches/$BRANCH si.$BRANCH/



--------------------------------------------------------------------------------
Versioning
--------------------------------------------------------------------------------
o   SystemImager uses kernel style versioning (X.Y.Z):

    X = major architectural change
    Y = feature release
        o   An odd number indicates a development release (leading up
            to an even numbered stable release).
        o   An even number indicates a stable release.
    Z = bug fix release
        o   (no new features)

o   Development releases may be made available unofficially.


