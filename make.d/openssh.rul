OPENSSH_VERSION := 3.4p1
OPENSSH_DIR := openssh-$(OPENSSH_VERSION)
ifdef WITH_SSH
    OPENSSH_TARBALL := openssh-$(OPENSSH_VERSION).tar.gz
	OPENSSH_TARBALL_TARGET := $(SRC_DIR)/$(OPENSSH_TARBALL)
    OPENSSH_URL := ftp://ftp.src.uchicago.edu/pub/OpenBSD/OpenSSH/portable/$(OPENSSH_TARBALL)
	OPENSSH_BINARIES := $(SRC_DIR)/$(OPENSSH_DIR)/ssh \
					$(SRC_DIR)/$(OPENSSH_DIR)/sshd \
					$(SRC_DIR)/$(OPENSSH_DIR)/scp \
					$(SRC_DIR)/$(OPENSSH_DIR)/ssh-keygen

	OPENSSH_CONF_FILES := $(TOPDIR)/etc/ssh/ssh_config \
					$(TOPDIR)/etc/ssh/sshd_config

	OPENSSH_OTHER_FILES := /lib/libnss_files-2.2.5.so \
					/lib/libnss_files.so.2

    ALL_SOURCE += $(SRC_DIR)/$(OPENSSH_TARBALL)
endif

PHONY += openssh
openssh:	$(OPENSSH_BINARIES)

$(OPENSSH_BINARIES):	$(SRC_DIR)/openssh_verify.stamp
	[ -d $(SRC_DIR)/$(OPENSSH_DIR) ] || ( cd $(SRC_DIR) && tar -xvzf $(OPENSSH_TARBALL) )
	cd $(SRC_DIR)/$(OPENSSH_DIR) && ./configure
	$(MAKE) -C $(SRC_DIR)/$(OPENSSH_DIR)

$(SRC_DIR)/openssh_verify.stamp:	$(SRC_DIR)/$(OPENSSH_TARBALL)
	$(GETSOURCE) $(OPENSSH_URL).sig $(SRC_DIR)
	#
	# If the following command fails, you may need to do a 
	#
	#   gpg --keyserver gpg.dtype.org --recv-keys <KEYID>
	#
	# with the "DSA key ID" listed below.
	#
	gpg --verify $(SRC_DIR)/$(OPENSSH_TARBALL).sig $(SRC_DIR)/$(OPENSSH_TARBALL)
	touch $(SRC_DIR)/openssh_verify.stamp

$(OPENSSH_TARBALL_TARGET):
	[ -d $(SRC_DIR) ] || mkdir -p $(SRC_DIR)
	$(GETSOURCE) $(OPENSSH_URL) $(SRC_DIR)

PHONY += openssh_clean
openssh_clean:
	rm -rf $(SRC_DIR)/$(OPENSSH_DIR)
	rm -f $(SRC_DIR)/openssh_verify.stamp


# Comments:
# apt-get install libssl-dev zlib1g-dev
