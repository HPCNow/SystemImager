#!/usr/bin/perl -w
#
# "SystemImager" 
#
#  Copyright (C) 2003 Bald Guy Software
#                     Brian Elliott Finley <brian@bgsw.net>
#
#  $Id$
#

use lib "USR_PREFIX/lib/systemimager/perl";
use Getopt::Long;
use SystemImager::Server;
use SystemImager::Config;
use vars qw($config $VERSION);

my $config_dir = "/etc/systemimager";

### BEGIN parse the config file ###
my $autoinstall_script_dir  = $config->autoinstall_script_dir();

if (!$autoinstall_script_dir) {
    die "AUTOINSTALL_SCRIPT_DIR not defined in the config file.";
}
### END parse the config file ###

$VERSION="SYSTEMIMAGER_VERSION_STRING";
$program_name = "imagecast";
$version_info = <<"EOF";
$program_name (part of SystemImager) v$VERSION
    
Copyright (C) 2003 Brian Elliott Finley <brian\@bgsw.net>
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
EOF

$get_help = "\n       Try \"-help\" for more options.";

$help_info = $version_info . <<"EOF";

Usage: $program_name [OPTION]... -script SCRIPTNAME

Options: (options can be presented in any order and may be abbreviated)
 --help                 Display this output.

 --version              Display version and copyright information.

 --verbose              Show additional information.

 --script SCRIPTNAME    Where SCRIPTNAME is the base name to use for the 
                        autoinstall script.

 --mcast-group          Starting multicast group number.  Must be an even
                        number, ane must match the setting used in dhcpd.conf
                        and/or local.cfg.  Defaults to 9000.

 --mcast-opts "OPTIONS" Quoted set of options to be passed directly to
                        udp-sender.  Two useful examples are "--interface eth1"
                        and "--max-bitrate 25M".  Multiple options should be 
                        quoted together: "--interface eth1 --max-bitrate 25M".
                        See "man udp-sender" for details and many other options.  
                        NOTE: Do not specify udp-sender's --portbase option, as
                        this is set by the --mcast-group option.

Download, report bugs, and make suggestions at:
http://systemimager.org/
EOF

# Set some defaults. -BEF-
my $mcast_group = 9000;
my $mcast_opts = "";
my $sleep_count_1 = 35; # maybe turn into option.  may not need w/Gary's patch.
my $sleep_count_2 = 5; # maybe turn into option.  may not need w/Gary's patch.

# take options
GetOptions( 
    "help"              => \my $help,
    "version"           => \my $version,
    "verbose"           => \my $verbose,
    "script=s"          => \my $script_name,
    "mcast-group=s"     => \$mcast_group,
    "mcast-opts=s"      => \$mcast_opts,
) || die "$help_info";


### BEGIN evaluate options ###
# if requested, print help information
if($help) { 
  print "$help_info";
  exit 0;
}

# if requested, print version and copyright information
if($version) {
  print "$version_info";
  exit 0;
}

# be sure program is run by root
SystemImager::Common->check_if_root();

# be sure $image is set
unless ($script_name) {
    die "\n$program_name: --script SCRIPTNAME must be specified.\n$get_help\n\n";
}

if ($verbose) { 
    print qq(script_name:\t$script_name\n);
    print qq(mcast_group:\t$mcast_group\n);
}

my $file = "$autoinstall_script_dir/${script_name}.master";
if ($verbose) { print qq(script: $file\n); }

unless (-e $file) {
    die "\n$program_name: Script $file doesn't exist!\n$get_help\n\n";
}

my ($junk, $imagename, $overrides);
open (FILE, "<$file") or die ("Can't open $file for reading!");
    while (<FILE>) {
        if (m/IMAGENAME=/) {
            chomp;
            ($junk, $imagename) = split(/=/);
            next;
        }
        if (m/OVERRIDES=/) {
            chomp;
            ($junk, $overrides) = split(/=/);
            $overrides =~ s/"//g;
            next;
        }
    }

    if ($verbose) {
        print "imagename:\t$imagename\n";
        print "overrides:\t$overrides\n";
    }
close (FILE);


### BOEL Binaries and autoinstall scripts
if ($verbose) { 
    print "casting_1:    BOEL binaries tarball and autoinstall scripts\n";
    print "mcast_group:  $mcast_group\n";
}
$cmd = "tar -cv -C /usr/share/systemimager/boot/i386/standard/ boel_binaries.tar.gz -C /var/lib/systemimager/ scripts | udp-sender $mcast_opts --portbase $mcast_group";
!system($cmd) or die ("$cmd failed!");
if ($verbose) {
    print "Sleep for $sleep_count_1 seconds to allow the autoinstall clients time to\n";
    print "partition their disks and format their filesystems.\n";
}
sleep $sleep_count_1;

### IMAGE
$mcast_group = $mcast_group + 2;
$cmd = "tar -cv -C /var/lib/systemimager/images/$imagename . | udp-sender $mcast_opts --portbase $mcast_group";
if ($verbose) { 
    print "casting_2:    The Image -- $imagename\n";
    print "mcast_group:  $mcast_group\n";
}
!system($cmd) or die ("$cmd failed!");
if ($verbose) {
    print "Sleep for $sleep_count_2 seconds before sending overrides.\n";
}
sleep $sleep_count_2;

### OVERRIDES
$mcast_group = $mcast_group + 2;
$cmd = "tar -cv";
foreach my $override ( split(/[[:space:]]/,$overrides) ) {
    my $dir = "/var/lib/systemimager/overrides/$override";
    if (-d $dir) {
        $cmd .= " -C $dir .";
    }
}    
$cmd .= " | udp-sender $mcast_opts --portbase $mcast_group";
if ($verbose) { 
    print "casting_3:    Override Directories\n";
    print "mcast_group:  $mcast_group\n";
}
!system($cmd) or die ("$cmd failed!");

exit 0;

