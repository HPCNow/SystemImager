#!/usr/bin/perl -w

#
# "SystemImager" - Copyright (C) 1999-2001 Brian Elliott Finley <brian@systemimager.org>
#
#   Others who have contributed to this code (in alphabetical order):
#
# This file is: mvimage
#

# set some variables
$version_number="1.5.0";
$program_name="mvimage";
$get_help = "         Try \"$program_name -help\" for more options.";

# declare modules
use Getopt::Long;
use File::Copy;

### BEGIN functions ###
sub trim {
  my @out = @_;
  for (@out) {
    s/^\s+//;
    s/\s+$//;
  }
  return wantarray ? @out : $out[0];
}
sub check_if_root{
    unless($< == 0) { die "$program_name: Must be run as root!\n"; }
}
### END functions ###

# set version information
$version_info = <<"EOF";
$program_name (part of SystemImager) version $version_number

Copyright (C) 1999-2001 Brian Elliott Finley <brian\@systemimager.org>
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
EOF

# set help information
$help_info = $version_info . <<"EOF";

Usage: $program_name [OPTION]... SOURCE_IMAGE DESTINATION_IMAGE

Options: (options can be presented in any order)

 -help                    Display this output.

 -version                 Display version and copyright information.

 -verbose                 Explain what is being done.

 -force                   Don\'t ask for confirmation before 
                          overwriting the destination image or master
			  autoinstall script (if they exist).

Download, report bugs, and make suggestions at:
http://systemimager.org/
EOF

# interpret command line options
GetOptions( 
  "help" => \$help,
  "version" => \$version,
  #"force" => \$force,
  "verbose" => \$verbose
) or die qq($help_info);

# if requested, print help information
if($help) {
  print qq($help_info);
  exit 0;
}

# if requested, print version and copyright information
if($version) {
  print qq($version_info);
  exit 0;
}

# be sure program is run by root
check_if_root();

# Take the arguments left after Getopt::Long parses it's stuff out 
# as the source and destination image names.
$source_image=$ARGV[0];
$destination_image=$ARGV[1];

unless(($source_image) and ($destination_image)) {
  die "\n$program_name: Must specify both SOURCE_IMAGE and DESTINATION_IMAGE.\n$get_help\n\n";
}

# get full path to image from /etc/rsyncd.conf
$file="/etc/rsyncd.conf";
open (FILE, "<$file") || die ("FATAL: Couldn't open $file for reading\n");
  while (<FILE>) {
    if (/$source_image/) { 
      print;
      next;
    }
  }
close FILE;


### BEGIN move image ### 
if($verbose) {print "Moving image $source_image to $destination_image.\n";}
### END move image ### 

exit 0;
