#!/usr/bin/perl -w
#
# "VA SystemImager" 
# Copyright (C) 1999-2001 Brian Elliott Finley <brian@valinux.com>
#
#   Others who have contributed to this code (in alphabetical order):
#     John Goebel <jgoebel@valinux.com>
#
# This file is: makedhcpserver
 

# what do I call myself?
$program=$0;

# Not everyone may want to create a dhcpd.conf in /etc...
$dhcpd_conf = "/etc/dhcpd.conf";


# Subroutines
sub get_response {
 my $garbage_out=$_[0];
 my $garbage_in=<STDIN>;
 chomp $garbage_in;
 unless($garbage_in eq "") { $garbage_out = $garbage_in; }
 return $garbage_out;
}

# if not run as root, this script will surely fail
unless($< == 0) { die "Must be run as root!\n"; }

system("clear");

# give warning
print <<"EOF";

Welcome to the VA SystemImager "makedhcpserver" command.  This command
will prepare this computer to be a DHCP server by creating the 
following file:

 $dhcpd_conf

If there is an existing file, it will be backed up as:

 ${dhcpd_conf}.beforesystemimager

EOF

print "Continue? (y/[n]): ";
$continue=<STDIN>;
chomp $continue;
($continue eq "y") or die "\n$program: No files were modified.\n";

# backup dhcpd.conf if necessary
if( -e "$dhcpd_conf" && ! -e "${dhcpd_conf}.beforesystemimager") { 
 rename("$dhcpd_conf", "${dhcpd_conf}.beforesystemimager");
}

# set some default values
$dnsdomainname="localdomain.domain";
$netnumber = "192.168.1.0";
$netmask = "255.255.255.0";
$rangebegin = "192.168.1.1";
$rangeend = "192.168.1.100";
$dnsserver1 = "";
$dnsserver2 = "";
$dnsserver3 = "";
$router = "192.168.1.254";
$imageserver = "192.168.1.254";
$swallow = "";

### Begin questionnaire ###
$satisfied = "n";
while ($satisfied ne "y") {
 system("clear");
 print << "EOF";
Type your response or hit <Enter> to accept [defaults].  If you don't
have a response, such as no first or second DNS server, just hit 
<Enter> and none will be used.

EOF

 print "\nWhat is your domain name? [$dnsdomainname]: ";
 $dnsdomainname=get_response($dnsdomainname);

 print "What is your network number? [$netnumber]: ";
 $netnumber=get_response($netnumber);

 print "What is your netmask? [$netmask]: ";
 $netmask=get_response($netmask);

 print "What is the starting IP address for your dhcp range? [$rangebegin]: ";
 $rangebegin=get_response($rangebegin);

 print "What is the ending IP address for your dhcp range? [$rangeend]: ";
 $rangeend=get_response($rangeend);

 print "What is the IP address of your first DNS server? [$dnsserver1]: ";
 $dnsserver1=get_response($dnsserver1);

 if ($dnsserver1) {
   print "What is the IP address of your second DNS server? [$dnsserver2]: ";
   $dnsserver2=get_response($dnsserver2);
 }

 if ($dnsserver2) {
   print "What is the IP address of your third DNS server? [$dnsserver3]: ";
   $dnsserver3=get_response($dnsserver3);
 }

 print "What is the IP address of your default gateway? [$router]: ";
 $router=get_response($router);

 print "What is the IP address of imageserver? [$imageserver]: ";
 $imageserver=get_response($imageserver);

 print "What is the air speed velocity of the common swallow? [$swallow]: ";
 $swallow=<STDIN>;
 system("clear");
 chomp $swallow;
 $swallow = lc $swallow;
 if($swallow =~ /african/) {
  print "Aaaaaaaaaaaaaaaaaaaaaaaaaaaah!\n";
 } else {
  print "Wrong!!! (with a Monty Python(TM) accent...)\n";
 }
 print "\nPress <Enter> to continue...";
 <STDIN>;

 system("clear");
 print "Ahh, but seriously folks...\n";
 print "Here are the values you have chosen:\n\n";
 print "################################################################\n";
 print "DNS Domain Name:                          $dnsdomainname\n";
 print "network number:                           $netnumber\n";
 print "netmask:                                  $netmask\n";
 print "starting IP address for your dhcp range:  $rangebegin\n";
 print "ending IP address for your dhcp range:    $rangeend\n";
 print "first DNS server:                         $dnsserver1\n";
 print "second DNS server:                        $dnsserver2\n";
 print "third DNS server:                         $dnsserver3\n";
 print "default gateway:                          $router\n";
 print "imageserver:                              $imageserver\n";
 print "################################################################\n";
 
 print "\nAre you satisfied? (y/[n]): ";
 $satisfied=<STDIN>;
 chomp $satisfied;
}

### End questionnaire ###

# open /etc/dhcpd.conf for writing
open(DHCPDCONF, "> $dhcpd_conf") || die "Couldn't open /etc/dhcpd.conf for writing: $!\n";

print DHCPDCONF << 'EOF';
# make network booting the VA SystemImager autoinstallclient possible
allow booting;
allow bootp;

# set lease time to 3 days
default-lease-time 259200;
max-lease-time 259200;

# what to get to boot the autoinstallclient
filename "/pxelinux.bin";
option dhcp-class-identifier "PXEClient";
option vendor-encapsulated-options 09:0f:80:00:0c:4e:65:74:77:6f:72:6b:20:62:6f:6f:74:0a:07:00:50:72:6f:6d:70:74:06:01:02:08:03:80:00:00:47:04:80:00:00:00:ff;

EOF

print DHCPDCONF qq(subnet $netnumber netmask $netmask { \n);
print DHCPDCONF qq(  range  $rangebegin $rangeend; \n);
print DHCPDCONF qq(  option domain-name "$dnsdomainname"; \n);
if($dnsserver1 ne "") { print DHCPDCONF qq(  option domain-name-servers $dnsserver1); }
if($dnsserver2 ne "") { print DHCPDCONF qq(, $dnsserver2); }
if($dnsserver3 ne "") { print DHCPDCONF qq(, $dnsserver3); }
if($dnsserver1 ne "") { print DHCPDCONF qq(;\n); }
print DHCPDCONF qq(  option routers $router; \n);
print DHCPDCONF qq(  # option-100 specifies the IP address of your SystemImager image server\n);
print DHCPDCONF qq(  option option-100 "$imageserver"; \n);
print DHCPDCONF qq( } \n);
close(DHCPDCONF);

system("chmod 600 $dhcpd_conf");

# Oh where oh where could my leases file directory be?
@lease_file_directories_du_jour = ( 
                        "/var/dhcp",
                        "/var/state/dhcp",
                        "/etc"
                       );

foreach my $directory (@lease_file_directories_du_jour) {
    # does *this* one exist?
    if ( -d "$directory" ) { 
        $dhcpd_lease_file_directory = $directory;
    }
    last if ( $dhcpd_lease_file_directory );
}

# Touch dhcpd.leases file so that dhcpd won't fart when started.
# Different installs put the file in different places so we touch
# one of several potential files and a monkey.
if( -d "$dhcpd_lease_file_directory" )
{
     my $file="$dhcpd_lease_file_directory/dhcpd.leases";
     system("touch $file");
     ($?) && die "\n$program: Couldn't touch $file.\n";
}

# words of wisdom
system("clear");
print <<"EOF";

The dhcp server configuration file (/etc/dhcpd.conf) file has been 
created for you.  Please verify it for accuracy.

If this file does not look satisfactory, you can run this command again
to re-create it: "makedhcpserver"

WARNING!:  If you have multiple physical network interfaces, be sure to 
edit the init script that starts dhcpd to specify the interface that 
is connected to your DHCP clients.  Here's an example:

 Change "/usr/sbin/dhcpd" to "/usr/sbin/dhcpd eth1".

Also, be sure to start or restart your dhcpd daemon.  This can usually
be done with a command like "/etc/init.d/dhcpd restart" or similar.

EOF

if( -e "/etc/rc.d/init.d/dhcpd" ){
  print "Would you like me to restart your DHCP server software now? (y/[n]): ";
  $continue=get_response();
  $continue=lc($continue);
  if( $continue eq "y" ){
    $command="/sbin/service dhcpd restart";
    system($command);
  }
}

exit 0;
