#!/usr/bin/perl -w

#
# "VA SystemImager" - Copyright (C) 1999-2000 Brian Elliott Finley <brian@valinux.com>
#
#   Others who have contributed to this code:
#     Wesley Smith <wessmith@engr.sgi.com>
#
# This file is: makeautoinstalldiskette
#

use Getopt::Long;

# set shell PATH for system() calls 
$ENV{PATH} = "/usr/sbin:/sbin:/usr/bin:/bin";

$version_number="1.3.0";
$program_name = "makeautoinstalldiskette";
#$floppy_device_suffix = "H1440";
$version_info = <<"EOF";
$program_name (part of VA SystemImager) v$version_number
    
Copyright (C) 1999-2000 Brian Elliott Finley <brian\@valinux.com>
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
EOF

$help_info = $version_info . <<"EOF";

Usage: $program_name [OPTION]...

Options: (options can be presented in any order and may be abbreviated)
 -help             Display this output.
 -version          Display version and copyright information.
 -quiet            Don\'t print any output, just provide an appropriate 
                   exit code.  (requires -floppy)
 -floppy=DEVICE    The  1.44MB floppy drive device containing the disk
                   to format.  If not specified, /dev/fd0 is assumed.
                   This command understands \"/dev/fd0\" through \"/dev/fd7\".
                   (if you specify -floppy, this command will run 
                    non-interactively)
 -config=FILE      Where FILE contains all the settings necessary for
                   the client to set it's hostname and configure it's
                   networking information without DHCP.  This file is
                   copied to /local.cfg on the autoinstalldiskette.

Contents of an example config file:
 HOSTNAME=www1
 DOMAINNAME=systemimager.org
 DEVICE=eth0
 IPADDR=10.0.0.99
 NETMASK=255.255.255.0
 NETWORK=10.0.0.0
 BROADCAST=10.0.0.255
 GATEWAY=10.0.0.1
 GATEWAYDEV=eth0
 IMAGESERVER=10.0.0.3

You can cut and paste this into your own file, but change each of the
values to the appropriate values for your specific client.

Download from http://systemimager.org/
Report bugs or suggestions to <systemimager-bugs\@systemimager.org>
EOF

GetOptions( 
            "help" => \$help,
            "version" => \$version,
            "floppy=s" => \$floppy_device_prefix,
            "config=s" => \$local_cfg_src,
            "quiet" => \$quiet 
) || die "$help_info";

# if floppy device not specified, set value to run in interactive mode
if($floppy_device_prefix) { $user_specified_floppy=1; }

# if requested, print help information
if($help) {
  print "$help_info";
  exit 0;
}

# if requested, print version and copyright information
if($version) {
  print "$version_info";
  exit 0;
}

# be sure the user includes -floppy when doing -quiet
if($quiet and !$user_specified_floppy) { die "Must use -floppy with -quiet! (use -help for options)\n"; }

# if user did not specify a floppy device, choose the default
if(!$user_specified_floppy) { $floppy_device_prefix = "/dev/fd0"; }

# verify that a valid floppy device was specified
if (! ($floppy_device_prefix =~ /^\/dev\/fd[0-7]$/)) {
    die "ERROR: Invalid -floppy argument.\n $help_info";
}

# if not run as root, this script will surely fail
unless($< == 0) { die "Must be run as root!\n"; }

# if appropriate, run interactively
if (!$user_specified_floppy) {
    system('clear');
    print << 'EOF';

This program assumes that you have a 1.44MB floppy drive and that
it is /dev/fd0.  You can use the -floppy command line option to
change this value.

If you do use -floppy, this command will run non-interactively!!!
Use the -help option to see all options.

Insert your floppy diskette now.  This will overwrite all
information on your diskette.

EOF

    print "Continue? (y/[n]): ";
    $continue=<STDIN>;
    chomp $continue;
    $continue = lc $continue;
    ($continue eq "y") or die "\nYour diskette has not been modified...\n";
}

# create floppy device if necessary
$floppy_device=$floppy_device_prefix;
unless (-b $floppy_device) { die "Couldn't find device file $floppy_device.\n"; }

if (-x "/usr/bin/superformat") {
  # format floppy
  if (!$quiet) { print "Formatting floppy as 1.44MB ...\n"; }
  if ($quiet) {
    system ("superformat $floppy_device hd > /dev/null 2>&1");
  } else {
    system ("superformat $floppy_device hd");
  }
  unless ($? == 0) { die "Couldn't format $floppy_device.\n"; }

} elsif (-x "/usr/bin/fdformat") {

  # format floppy
  if (!$quiet) { print "Formatting floppy as 1.44MB ...\n"; }
  if ($quiet) {
    system ("fdformat $floppy_device > /dev/null 2>&1");
  } else {
    system ("fdformat $floppy_device");
  }
  if($? != 0) { die "Couldn't format $floppy_device.\n"; }


  # create dos filesystem on floppy
  if (!$quiet) {
    print "Creating DOS filesystem on floppy...\n";
  }
  if ($quiet) {
    system("mkdosfs $floppy_device > /dev/null");
  } else {
    system("mkdosfs $floppy_device");
  }
  unless ($? == 0) { die "Couldn't create dos filesystem on $floppy_device.\n"; }
}


# create temporary mount point
if (!$quiet) { print "Creating temporary mount point...\n"; }
$mount_dir="/tmp/.autoinstalldiskette.$$";
mkdir $mount_dir, 0770 or die "Couldn't create temporary mount point $mount_dir.\n";

# mount the freshly created filesystem
if (!$quiet) { print "Mounting floppy...\n"; }
system('mount', '-t', 'msdos', $floppy_device, $mount_dir);
    if($? != 0) { die "Couldn't mount $floppy_device on $mount_dir.\n"; }

# copy stuff to floppy
foreach $file ("/tftpboot/initrd.gz", "/tftpboot/kernel", "/tftpboot/pxelinux.cfg/syslinux.cfg", "/tftpboot/pxelinux.cfg/message.txt") {
    if (!$quiet) {print "Copying $file to floppy.\n";}
    system('cp', '-f', $file, $mount_dir);
        if($? != 0) { 
	    system('umount', $floppy_device);
	    rmdir $mount_dir;
	    die "Couldn't copy $file to $mount_dir.\n";
	}
}

# copy local config stuff to floppy (if necessary)
$local_cfg_dst="$mount_dir/local.cfg";
if ($local_cfg_src) {
  if (!$quiet) {print "Copying config file $local_cfg_src to local.cfg on floppy.\n";}
  open(LOCAL_CFG_DST, "> $local_cfg_dst") or die "Couldn't open $local_cfg_dst for writing: $!\n";
    open(LOCAL_CFG_SRC, "< $local_cfg_src") or die "Couldn't open $local_cfg_src for reading: $!\n";
    while (<LOCAL_CFG_SRC>) { 
      print LOCAL_CFG_DST; 
    }
    close(LOCAL_CFG_SRC);
  close(LOCAL_CFG_DST);
}

# unmount floppy
if (!$quiet) {print "Un-mounting floppy...\n";}
system('umount', $floppy_device);
    if($? != 0) { 
	rmdir $mount_dir;
	die "Couldn't un-mount $floppy_device from $mount_dir.\n";
    }

# get rid of temporary directory
if (!$quiet) { print "Removing temporary mount point...\n";}
rmdir $mount_dir or die "Couldn't remove temporary mount point $mount_dir\n";

# run syslinux
if (!$quiet) {print "Using \"syslinux\" to make floppy bootable...\n";}
system('syslinux', '-s', $floppy_device);
    if($? != 0) { die "\"syslinux -s $floppy_device\" failed.\n"; }

# print done!
if (!$quiet) { print "Done!\n";}
exit 0;

