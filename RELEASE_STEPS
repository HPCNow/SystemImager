#
# "SystemImager" - Copyright (C) 1999-2002 Brian Elliott Finley <brian@baldguysoftware.com>
#
#   $Id$
#


# And today's release in progress is:
2.2.0 is the version currently striving to be released.



# The purpose of this file is to detail steps for making releases.  It 
# is my intention that, by following the steps outlined here, we are
# able to produce clean, stable, reliable releases time after time.

### Stable Releases ###
#   o final releases must comply completely
#   o test releases need not comply completely
#   o tests may be run by volunteers
#   o Brian Finley, Dann Frazier, Sean Dague, and Curtis Zinzilieta may
#     modify this file as is appropriate.

At some point, we need to put these steps into a chronological order.

1) Formally announce a code freeze and get everyone to make their final
   pre-freeze commits.

2) Bring development systems up to date, if appropriate: 

    "apt-get update && apt-get upgrade"
   
   Do not update development systems again until after the release.

3) Do other stuff in this file.

4) Save an image of the final build system after the release, but 
   before any updates or modifications are made to it.

Files to Update:
  o ERRATA
  o VERSION
  o CHANGE.LOG
  o CREDITS


----------------------------------------
Tests (for each supported architecture)
----------------------------------------
See the TESTERS file to request people to run specific tests.  Always Cc:
the systemimager-devel list when making such a request so that other 
developers will not make the same request of that tester.

Servers
  o upgrade from previous version
    o install previous version
    o run getimage and addclients
    o install new version
    o run getimage, addclients, and perform an autoinstall
    o do an updateclient

Clients
  o get and autoinstall an image containing the following filesystems:
    o ext3
    o reiserfs
  o get and autoinstall an image with software RAID
  o get and autoinstall an image with DAC960 HW RAID
  o autoinstall an image using DHCP, booting from a floppy
  o autoinstall an image using DHCP, booting from a harddisk
  o autoinstall an image using local.cfg, booting from a floppy
  o autoinstall an image using local.cfg, booting from a harddisk
  o autoinstall an image over ssh
  o get an image over ssh
  o get an image over ssh w/ both machines firewalled except for ssh

Distros
  o get and autoinstall an image with the most recent stable RedHat release
  o get and autoinstall an image with the most recent stable Debian release

Tools
  o cpimage
    o copy an image from a remote image server to the local machine
  o rmimage
    o remove an image
  o mkbootserver
    o create a pxe server, and install a client via pxe
  o mkautoinstalldiskette
    o create a floppy (i386 only)
  o mkautoinstallcd
    o create a cd image

### Development Releases ###
o step one
o step two
o test one
o test two
o etc.

### Doing the Release ###
o clean CVS tree
o remove README.1ST file
o make source_tarball
   suggestion:  copy to a good place, you will need to access it from multiple
                machines, and want to make sure you are using the same tarball
                everywhere.  this is all happening before CVS is tagged, so
                we want to make sure that a last minute commit doesn't make
                one arch's source different from another.

for each arch (including the one where you created the source tarball)
  o make sure the build machine is in a stable state (i.e., apt-get upgrade
    and make sure all the build-deps are available)
  o extract the source tarball
  o make client_tarball server_tarball boot_tarball
  o remove build tree & extract a new one
  o clear out /usr/src/rpm
  o make rpm (use the srpm created by the first arch for all other arches)

o produce one MD5SUM file for all files for a particular release version
o upload
o close any pending bugs that were closed by this upload.
o download
  o test each package against it's MD5SUM
