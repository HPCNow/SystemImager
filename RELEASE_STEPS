#
# "SystemImager" - Copyright (C) 1999-2001 Brian Elliott Finley <brian@systemimager.org>
#
#   $Id$
#

# The purpose of this file is to detail steps for making releases.  It 
# is my intention that, by following the steps outlined here, we are
# able to produce clean, stable, reliable releases time after time.

### Stable Releases ###
#   o final releases must comply completely
#   o test releases need not comply completely
#   o tests may be run by volunteers
#   o Brian Finley, Dann Frazier, Sean Dague, and Curtis Zinzilieta may
#     modify this file as is appropriate.

Files to Update:
  _ ERRATA
  _ VERSION
  _ CHANGE.LOG
  _ CREDITS

----------------------------------------
Tests (for each supported architecture)
----------------------------------------
Clients
  o get and autoinstall an image containing the following filesystems:
    _ ext3
    _ reiserfs
  _ get and autoinstall an image with software RAID
  _ get and autoinstall an image with DAC960 HW RAID
  _ autoinstall an image using DHCP, booting from a floppy
  _ autoinstall an image using DHCP, booting from a harddisk
  _ autoinstall an image using local.cfg, booting from a floppy
  _ autoinstall an image using local.cfg, booting from a harddisk
  _ autoinstall an image over ssh
  _ get an image over ssh
  _ get an image over ssh w/ both machines firewalled except for ssh
  - getimage -golden-client <client> -image <image> -update-script yes -ip-assignment replicant

Distros
  _ get and autoinstall an image with the most recent stable RedHat release
  _ get and autoinstall an image with the most recent stable Debian release

Tools
  o cpimage
    _ copy an image from a remote image server to the local machine
  o rmimage
    _ remove an image
  o mkbootserver
    _ create a pxe server, and install a client via pxe
  o mkautoinstalldiskette
    _ create a floppy (i386 only)
  o mkautoinstallcd
    _ create a cd image

### Development Releases ###
o step one
o step two
o test one
o test two
o etc.

### Doing the Release ###
- clean CVS tree
- make source_tarball
   suggestion:  copy to a good place, you will need to access it from multiple
                machines, and want to make sure you are using the same tarball
                everywhere.  this is all happening before CVS is tagged, so
                we want to make sure that a last minute commit doesn't make
                one arch's source different from another.

for each arch (including the one where you created the source tarball)
  - make sure the build machine is in a stable state (i.e., apt-get upgrade
    and make sure all the build-deps are available)
  - extract the source tarball
  - make client_tarball server_tarball
  - remove build tree & extract a new one
  - find /usr/src/rpm -type f -exec rm {}
  - make rpm (revisit, now that srpm rule exists)
