#!/bin/sh

#
# "VA SystemImager" - Copyright (C) 1999-2001 Brian Elliott Finley <brian@valinux.com>
#
#   Others who have contributed to this code (in alphabetical order):
#     Michael R. Nolta <mrnolta@princeton.edu>
#
# This file is: afterburner
#  (second stage install -- this script does all the configuration file stuff and
#   is run automatically by "install" unless the --no-afterburner option is used.
#   This script will only be run by itself during the RPM creation process.  Normal
#   users only need to run "install".)
#

# do a quiet afterburn? or an interactive afterburn?
QUIET="false"
INTERACTIVE="true"
for command_line_option ; do
  case $command_line_option in
    -q|-quiet|--quiet                     ) QUIET="true" && INTERACTIVE="false" ;;
    -n|-non-interactive|--non-interactive ) INTERACTIVE="false" ;;
  esac
done

# set some variables
PATH=/bin:/usr/bin:/sbin:/usr/sbin
PACKAGE_NAME=va-systemimager
COMMAND_PATH=`dirname $0`
cd $COMMAND_PATH
INSTALL_DIR=`pwd`
VERSION=`cat $INSTALL_DIR/VERSION`
RESTART_INETD=no

# if not run as root, install will surely fail
[ `whoami` != "root" ] && echo "Must be run as root!" && exit 1


##############################################################################################
### BEGIN functions
##############################################################################################

# SystemImager specific functions
create_rsyncd_conf() {
  echo '#'                                                      > /etc/rsyncd.conf
  echo '# "VA SystemImager" - Copyright (C) 1999-2000 Brian Elliott Finley <brian@valinux.com>'    >> /etc/rsyncd.conf
  echo '#'                                                      >> /etc/rsyncd.conf
  echo ''                                                       >> /etc/rsyncd.conf
  echo 'list = yes'                                             >> /etc/rsyncd.conf
  echo 'timeout = 600'                                          >> /etc/rsyncd.conf
  echo 'dont compress = *.gz *.tgz *.zip *.Z *.ZIP *.bz2 *.deb *.rpm *.dbf'  >> /etc/rsyncd.conf
  echo 'uid = root'                                             >> /etc/rsyncd.conf
  echo 'gid = root'                                             >> /etc/rsyncd.conf
  echo 'use chroot = no'                                        >> /etc/rsyncd.conf
  echo 'log file = /var/log/systemimager'                       >> /etc/rsyncd.conf
  echo ''                                                       >> /etc/rsyncd.conf
  echo '[tftpboot]'                                             >> /etc/rsyncd.conf
  echo '  path = /tftpboot'                                     >> /etc/rsyncd.conf
  echo ''                                                       >> /etc/rsyncd.conf
  echo '# only image entries below this line'                   >> /etc/rsyncd.conf
  echo ''                                                       >> /etc/rsyncd.conf
}
##############################################################################################
### END functions
##############################################################################################



### BEGIN introduction ###
if [ $INTERACTIVE = "true" ]; then
  clear
  echo "Welcome to VA SystemImager."
  echo
  echo "This install script may modify the following files and/or directories:"
  echo
  echo " /tftpboot/systemimager/ -- create if necessary and add appropriate files/links"
  echo " /tftpboot/pxelinux.cfg/ -- create if necessary and add appropriate files/links"
  echo " /etc/services           -- add rsync and/or tftp entries if necessary"
  echo " /etc/inetd.conf         -- remove rsync entry if necessary and"
  echo "                            add or modify tftp entry if necessary"
  echo " /etc/rsyncd.conf        -- it is assumed that VA SystemImager will manage this"
  echo "                            file and that it will not be used for anything else"
  echo " /etc/init.d/rsync       -- init script to start the rsync daemon"
  echo
  echo " All modified files will be backed up with the .beforesystemimager extension."
  echo

  # you sure you want to install?
  echo -n "Modify the necessary files for VA SystemImager? (y/[n]) "
  read REPLY
  case $REPLY in
    y|Y|Yes|yes|YES ) clear; echo Ok.  Modifying files... ;;
                  * ) echo Install cancelled.  No files modified. && exit 1 ;;
  esac

  echo
  sleep 2
fi
### END introduction ###


### BEGIN inetd stuff ###
# verify that rsync entries are in /etc/services
egrep -qw ^rsync /etc/services
if [ $? != "0" ]; then
  if [ ! -f /etc/services.beforesystemimager ]; then
    [ $QUIET = "false" ] && echo "backing up /etc/services to /etc/services.beforesystemimager..."

    cp -af /etc/services /etc/services.beforesystemimager
  fi
  egrep -qw ^#rsync /etc/services
  if [ $? != "0" ]; then
    [ $QUIET = "false" ] && echo "adding rsync entries to /etc/services..."
    echo "rsync           873/tcp                         # rsync" >> /etc/services
    echo "rsync           873/udp                         # rsync" >> /etc/services
  else
    [ $QUIET = "false" ] && echo "uncommenting (enabling) rsync entries in /etc/services..."
    sed 's/^#rsync/rsync/' /etc/services > /tmp/.systemimager
    cp -af /tmp/.systemimager /etc/services
    rm -f /tmp/.systemimager
  fi
  RESTART_INETD=yes
else
  [ $QUIET = "false" ] && echo "rsync entries already enabled in /etc/services..."
fi 

# verify that tftp entry is in /etc/services
egrep -qw ^tftp /etc/services
if [ $? != "0" ]; then
  if [ ! -f /etc/services.beforesystemimager ]; then
    [ $QUIET = "false" ] && echo "backing up /etc/services to /etc/services.beforesystemimager..."

    cp -af /etc/services /etc/services.beforesystemimager
  fi
  egrep -qw ^#tftp /etc/services
  if [ $? != "0" ]; then
    [ $QUIET = "false" ] && echo "adding tftp entry to /etc/services..."
    echo "tftp           69/udp                         # tftp" >> /etc/services
  else
    [ $QUIET = "false" ] && echo "uncommenting (enabling) tftp entry in /etc/services..."
    sed 's/^#tftp/tftp/' /etc/services > /tmp/.systemimager
    cp -af /tmp/.systemimager /etc/services
    rm -f /tmp/.systemimager
  fi
  RESTART_INETD=yes
fi 

### BEGIN Do if we have an inetd.conf file ###
if [ -f /etc/inetd.conf ]
then
  # verify that rsync entry is in /etc/inetd.conf
  egrep -qw ^rsync /etc/inetd.conf
  # if we find an rsync entry in /etc/inetd.conf, let's get rid of it
  if [ $? = "0" ]; then 
    if [ ! -f /etc/inetd.conf.beforesystemimager ]; then
      [ $QUIET = "false" ] && echo "backing up /etc/inetd.conf to /etc/inetd.conf.beforesystemimager..."
      cp -af /etc/inetd.conf /etc/inetd.conf.beforesystemimager
    fi
    [ $QUIET = "false" ] && echo "commenting out (disabling) rsync entry in /etc/inetd.conf..."
    sed 's/^rsync/#rsync/' /etc/inetd.conf > /tmp/.inetd.conf.$$
    # we use cat here to maintain the same file permissions on /etc/inetd.conf
    cat /tmp/.inetd.conf.$$ > /etc/inetd.conf
    rm -f /tmp/.inetd.conf.$$
    RESTART_INETD=yes
  fi 

  # verify that a tftp entry is in /etc/inetd.conf
  egrep -qw ^tftp /etc/inetd.conf
  if [ $? != "0" ]; then
    if [ ! -f /etc/inetd.conf.beforesystemimager ]; then
      [ $QUIET = "false" ] && echo "backing up /etc/inetd.conf to /etc/inetd.conf.beforesystemimager..."
      cp -af /etc/inetd.conf /etc/inetd.conf.beforesystemimager
    fi
    egrep -qw ^#tftp /etc/inetd.conf | egrep -q "\-s \-r blksize \/tftpboot"
    if [ $? != "0" ]; then
      [ $QUIET = "false" ] && echo "adding tftp entry to /etc/inetd.conf..."
      echo "tftp    dgram   udp     wait    root    /usr/sbin/tcpd  in.tftpd -s -r blksize /tftpboot" >> /etc/inetd.conf
    else
      [ $QUIET = "false" ] && echo "uncommenting (enabling) tftp entry in /etc/inetd.conf..."
      sed 's/^#tftp/tftp/' /etc/inetd.conf > /tmp/.systemimager
      cp -af /tmp/.systemimager /etc/inetd.conf
      rm -f /tmp/.systemimager
    fi
    RESTART_INETD=yes
  else
    egrep -q "\-s \-r blksize \/tftpboot" /etc/inetd.conf
    if [ $? != "0" ]; then
      # tftp entry may exist, however, tftp-hpa special options are not enabled
      # so comment out existing entry
      [ $QUIET = "false" ] && echo "commenting out (disabling) tftp entry in /etc/inetd.conf..."
      sed 's/^tftp/#tftp/' /etc/inetd.conf > /tmp/.systemimager
      cp -af /tmp/.systemimager /etc/inetd.conf
      rm -f /tmp/.systemimager
      [ $QUIET = "false" ] && echo "adding VA SystemImager brand tftp entry in /etc/inetd.conf..."
      # Now we can put this entry right after the original one -- thanks to Michael Nolta!
      TFTP_ENTRY="tftp    dgram   udp     wait    root    \/usr\/sbin\/tcpd  in.tftpd -s -r blksize \/tftpboot"
      sed "/^#tftp/{G;s/$/$TFTP_ENTRY/;}" /etc/inetd.conf > /tmp/.systemimager
      cp -af /tmp/.systemimager /etc/inetd.conf
      rm -f /tmp/.systemimager
      RESTART_INETD=yes
    else
      [ $QUIET = "false" ] && echo "tftp entry already enabled in /etc/inetd.conf..."
    fi
  fi 
fi
### END Do if we have an inetd.conf file ###

# signal inetd to re-read it's configuration information
if [ $RESTART_INETD = "yes" ]
then
  # this stuff for regular inetd
  [ $QUIET = "false" ] && echo -n "Signalling inetd to re-read it's configuration information: "
  PID_OF_INETD=`pidof inetd`
  [ ! -z $PID_OF_INETD ] && kill -HUP $PID_OF_INETD
  [ $QUIET = "false" ] && echo ""
  
   # this stuff for xinetd
  [ $QUIET = "false" ] && echo -n "Signalling inetd to re-read it's configuration information: "
  PID_OF_XINETD=`pidof xinetd`
  #
  # Dann Frazier <daniel_frazier@hp.com> caught me sending the wrong signal to xinetd.
  # Thanks, Dann, 
  #
  # -Brian
  #
  [ ! -z $PID_OF_XINETD ] && kill -s SIGUSR1 $PID_OF_XINETD
  [ $QUIET = "false" ] && echo "" 
fi
### END inetd stuff ###


### BEGIN rsync stuff ###

### BEGIN install VA SystemImager brand rsyncd.conf file
# if it doesn't exist, create it
if [ ! -f /etc/rsyncd.conf ]; then
  [ $QUIET = "false" ] && echo "creating VA SystemImager brand /etc/rsyncd.conf..."
  create_rsyncd_conf
# OK, it does exist -- but if the backup file doesn't exist, back it up 
elif [ ! -f /etc/rsyncd.conf.beforesystemimager ]; then
  [ $QUIET = "false" ] && echo "backing up /etc/rsyncd.conf to /etc/rsyncd.conf.beforesystemimager..."
  cp -af /etc/rsyncd.conf /etc/rsyncd.conf.beforesystemimager
  # and create rsyncd.conf
  [ $QUIET = "false" ] && echo "creating VA SystemImager brand /etc/rsyncd.conf..."
  create_rsyncd_conf
else 
  # the backup file exists, so check to see if current rsyncd.conf belongs
  # to VA SystemImager.  If not, back it up and create our own.
  TOUCHIT="yes"
  egrep -qw SystemImager /etc/rsyncd.conf && TOUCHIT="no"
  if [ $TOUCHIT = "yes" ]; then
    [ $QUIET = "false" ] && echo "backing up /etc/rsyncd.conf to /etc/rsyncd.conf.beforesystemimager..."
    cp -af /etc/rsyncd.conf /etc/rsyncd.conf.beforesystemimager
    # and create rsyncd.conf
    [ "$QUIET" = "false" ] && echo "creating VA SystemImager brand /etc/rsyncd.conf..."
    create_rsyncd_conf
  else
    [ $QUIET = "false" ] && echo VA SystemImager brand /etc/rsyncd.conf file already exists...
  fi
fi
### END install VA SystemImager brand rsyncd.conf file

# be sure we have a tftpboot entry
egrep -q '\[tftpboot\]' /etc/rsyncd.conf || ADD_TFTPBOOT="yes"
if [ "$ADD_TFTPBOOT" = "yes" ]; then
  [ "$QUIET" = "false" ] && echo adding [tftpboot] entry to /etc/rsyncd.conf...
  echo ''                                                       >> /etc/rsyncd.conf
  echo '[tftpboot]'                                             >> /etc/rsyncd.conf
  echo '  path = /tftpboot'                                     >> /etc/rsyncd.conf
  echo '  log file = /var/log/systemimager.tftpboot'            >> /etc/rsyncd.conf
  echo ''                                                       >> /etc/rsyncd.conf
fi
### END rsync stuff ###


### BEGIN create softlinks and run rsync init script ###
# create soft links to rsync init script
[ $QUIET = "false" ] && echo "creating soft links to rsync init script..."
[ -d /etc/rc.d/init.d ] && INITDIR_PREFIX="/etc/rc.d"
[ -d /etc/init.d ] && INITDIR_PREFIX="/etc"
if [ -f $INITDIR_PREFIX/init.d/rsync ]
then
  cd $INITDIR_PREFIX/rc0.d; ln -sf ../init.d/rsync K20rsync
  cd $INITDIR_PREFIX/rc1.d; ln -sf ../init.d/rsync K20rsync
  cd $INITDIR_PREFIX/rc2.d; ln -sf ../init.d/rsync S20rsync
  cd $INITDIR_PREFIX/rc3.d; ln -sf ../init.d/rsync S20rsync
  cd $INITDIR_PREFIX/rc4.d; ln -sf ../init.d/rsync S20rsync
  cd $INITDIR_PREFIX/rc5.d; ln -sf ../init.d/rsync S20rsync
  cd $INITDIR_PREFIX/rc6.d; ln -sf ../init.d/rsync K20rsync
fi
# run rsync init script
[ $QUIET = "false" ] && echo "running rsync init script..."
[ $QUIET = "false" ] \
  && $INITDIR_PREFIX/init.d/rsync restart \
  || $INITDIR_PREFIX/init.d/rsync restart > /dev/null 2>&1
### END create softlinks and run rsync init script ###


### BEGIN dhcp stuff ###
# Hey! Want dhcp?
if [ $INTERACTIVE = "true" ]; then
  echo
  echo -n "Press <Enter> to continue..."
  read REPLY
  clear
  echo -n "Would you like me to configure this computer as a dhcp server now? (y/[n]) "
  read REPLY
  case $REPLY in
    y|Y|Yes|yes|YES ) makedhcpserver ;;
  esac
fi
### END dhcp stuff ###


# wrap up
[ $QUIET = "false" ] && [ $INTERACTIVE = "true" ] && clear
[ $QUIET = "false" ] && echo
[ $QUIET = "false" ] && echo "All done!  Please read the manual before using SystemImager."
[ $QUIET = "false" ] && echo "See /usr/doc/$PACKAGE_NAME-$VERSION/ for all documentation."
[ $QUIET = "false" ] && echo

exit 0




